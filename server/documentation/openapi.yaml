openapi: 3.0.3
info:
  title: Task Tracking System API
  version: 1.0.0
  description: API contract for the Task Tracking System (tasks, users, auth, time logs)
servers:
  - url: http://localhost:3000/api
paths:
  /tasks:
    get:
      summary: Get all tasks
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of tasks
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      $ref: "#/components/schemas/Task"
        "401":
          description: Unauthorized
    post:
      summary: Create a new task
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskInput"
      responses:
        "201":
          description: Task created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
  /tasks/{id}:
    get:
      summary: Get a task by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Task found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "404":
          description: Task not found
        "401":
          description: Unauthorized
    put:
      summary: Update a task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskInput"
      responses:
        "200":
          description: Task updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "400":
          description: Invalid input
        "404":
          description: Task not found
        "401":
          description: Unauthorized
    delete:
      summary: Delete a task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Task deleted
        "404":
          description: Task not found
        "401":
          description: Unauthorized
  /auth/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  userId:
                    type: integer
                  token:
                    type: string
        "400":
          description: Missing credentials
        "401":
          description: Invalid credentials

  /auth/register:
    post:
      summary: User registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        "201":
          description: User registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  userId:
                    type: integer
                  token:
                    type: string
        "400":
          description: Invalid input
        "409":
          description: Email already registered

  /users:
    get:
      summary: Get all users
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized
    post:
      summary: Create a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInput"
      responses:
        "201":
          description: User created
        "400":
          description: Invalid input
        "409":
          description: Email already registered

  /users/{id}:
    get:
      summary: Get user by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: User found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User not found
        "401":
          description: Unauthorized
    put:
      summary: Update user
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInput"
      responses:
        "200":
          description: User updated
        "400":
          description: Invalid input
        "404":
          description: User not found
        "401":
          description: Unauthorized
    delete:
      summary: Delete user
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: User deleted
        "404":
          description: User not found
        "401":
          description: Unauthorized

  /tasks/{id}/timelogs:
    get:
      summary: Get all time logs for a task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: List of time logs
          content:
            application/json:
              schema:
                type: object
                properties:
                  timeLogs:
                    type: array
                    items:
                      $ref: "#/components/schemas/TimeLog"
        "404":
          description: Task not found
        "401":
          description: Unauthorized
    post:
      summary: Add a time log to a task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TimeLogInput"
      responses:
        "201":
          description: Time log created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TimeLog"
        "400":
          description: Invalid input
        "404":
          description: Task not found
        "401":
          description: Unauthorized

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        estimate:
          type: number
        status:
          type: string
        userId:
          type: integer
    TaskInput:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        estimate:
          type: number
        status:
          type: string
      required:
        - title
        - estimate
        - status
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
    UserInput:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    TimeLog:
      type: object
      properties:
        id:
          type: integer
        date:
          type: string
          format: date
        hours:
          type: number
        note:
          type: string
        taskId:
          type: integer
        userId:
          type: integer
    TimeLogInput:
      type: object
      properties:
        date:
          type: string
          format: date
        hours:
          type: number
        note:
          type: string
      required:
        - date
        - hours
